generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId             String     @id
  name               String
  password           String
  status             UserStatus @default(ACTIVE)
  role               UserRole
  joinedAt           DateTime   @default(now())
  updateAt           DateTime   @updatedAt
  needPasswordChange Boolean    @default(true)

  @@map("users")
}

enum UserStatus {
  ACTIVE
  BLOCKED
  PENDING
}

enum UserRole {
  SUPER_ADMIN
  ADMIN
  ACCOUNTANT
  MODERATOR
  STUDENT
  TEACHER
}

model Staff {
  userId      String    @id @default(uuid())
  name        String
  nid         String    @unique
  phone       String    @unique
  dob         DateTime
  bloodGroup  String
  salary      Float
  designation String
  address     Json
  education   Json?
  role        StaffRole
  joinedAt    DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  Section     Section[]

  SubjectTeacher SubjectTeacher[]

  @@map("staff")
}

enum StaffRole {
  ADMIN
  ACCOUNTANT
  MODERATOR
  TEACHER
  OTHER
}

model Class {
  id        String   @id @default(uuid())
  name      String
  level     String
  subjects  String[] @default([])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  sections Section[]

  @@map("classes")
}

model Section {
  id   String @id @default(uuid())
  name String

  teacherId String
  teacher   Staff  @relation(fields: [teacherId], references: [userId])

  classId String
  class   Class  @relation(fields: [classId], references: [id])

  subjectTeachers SubjectTeacher[]

  @@map("sections")
}

model SubjectTeacher {
  teacherId String
  teacher   Staff  @relation(fields: [teacherId], references: [userId])

  sectionId String
  section   Section @relation(fields: [sectionId], references: [id])

  @@id([teacherId, sectionId])
  @@map("subject_teachers")
}
